version: 2
jobs:
  deploy-production:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Downloading Artifacts
          command: |
            curl https://circleci.com/api/v1.1/project/github/MultusMedical/application-interface/latest/artifacts?circle-token=$CIRCLE_TOKEN > artifacts.json
            npm i wget-improved
            node ./.circleci/artifacts.js
            rm artifacts.json
      - setup_remote_docker
      - run:
          name: Deploying Production
          command: |
            docker build -t multus/application-server --build-arg MACHINENAME=application-server .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push multus/application-server
  deploy-staging:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Downloading Artifacts
          command: |
            curl https://circleci.com/api/v1.1/project/github/MultusMedical/application-interface/latest/artifacts?circle-token=$CIRCLE_TOKEN > artifacts.json
            npm i wget-improved
            node ./.circleci/artifacts.js
            rm artifacts.json
      - run:
          name: Deploying Staging
          command: |
            npm install
            npm run build
      - setup_remote_docker
      # - add_ssh_keys:
      # fingerprints:
      # - "de:fd:0a:a5:ab:28:59:00:8e:c6:f1:63:f5:86:cb:07"
      - run:
          name: Deploying Staging
          command: |
            # cp ${HOME}/.ssh/id_rsa_defd0aa5ab2859008ec6f163f586cb07 id_rsa_adapters
            # cat ${HOME}/.ssh/config
            docker build -t multus/application-server:staging --build-arg MACHINENAME=application-server-staging .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push multus/application-server:staging
workflows:
  version: 2
  build-workflow:
    jobs:
      - deploy-production:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-staging:
          filters:
            branches:
              only: master
