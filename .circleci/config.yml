version: 2
jobs:
  deploy-production:
    docker:
      - image: circleci/node # TODO is there better image to use?
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Downloading Artifacts
          command: |
            #mkdir static
            cd static
            curl https://circleci.com/api/v1.1/project/github/MultusMedical/application-interface/latest/artifacts?circle-token=$CIRCLE_TOKEN | grep -o 'https://[^"]*' > artifacts.txt
            <artifacts.txt xargs -P4 -I % wget %?circle-token=$CIRCLE_TOKEN
            for file in *.*\?*; do mv "$file" "${file%%\?*}"; done
            rm artifacts.txt
            cd ~/repo
      - setup_remote_docker
      - run:
          name: Deploying Production
          command: |
            docker build -t multus/application-server --build-arg MACHINENAME=application-server .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push multus/application-server
  deploy-staging:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Downloading Artifacts
          command: |
            # mkdir static
            # cd .circleci
            curl https://circleci.com/api/v1.1/project/github/MultusMedical/application-interface/latest/artifacts?circle-token=$CIRCLE_TOKEN > artifacts.json
            # <artifacts.txt xargs -P4 -I % wget %?circle-token=$CIRCLE_TOKEN
            # for file in *.*\?*; do mv "$file" "${file%%\?*}"; done
            npm i wget-improved
            node ./.circleci/artifacts.js
            rm artifacts.json
      - setup_remote_docker
      - run:
          name: Deploying Staging
          command: |
            docker build -t multus/application-server:staging --build-arg MACHINENAME=application-server-staging .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push multus/application-server:staging
workflows:
  version: 2
  build-workflow:
    jobs:
      - deploy-production:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-staging:
          filters:
            branches:
              only: master